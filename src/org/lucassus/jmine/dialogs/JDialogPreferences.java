/*
 * JDialogPreferences.java
 *
 * Created on 29 sierpieï¿½ 2005, 19:13
 */
package org.lucassus.jmine.dialogs;

import org.lucassus.jmine.JMineFrame;
import org.lucassus.jmine.field.MineField;
import java.awt.Rectangle;
import javax.swing.JSlider;
import javax.swing.JTextField;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author  lucassus
 */
public class JDialogPreferences extends javax.swing.JDialog {

    private class SlidersListener implements ChangeListener {

        JTextField textField;

        SlidersListener(JTextField textField) {
            this.textField = textField;
        }

        @Override
        public void stateChanged(ChangeEvent evt) {
            JSlider slider = (JSlider) evt.getSource();
            textField.setText(Integer.toString(slider.getValue()));

            int fieldWidth = jSliderMineFieldWidth.getValue();
            int fieldHeight = jSliderMineFieldHeight.getValue();
            int maxMines = (int) Math.ceil((fieldHeight * fieldWidth) / 2);
            jSliderNumberOfMines.setMaximum(maxMines);
        }
    }
    private MineField mineField;

    /**
     * Creates new form JDialogPreferences
     */
    public JDialogPreferences(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Rectangle parentBounds = parent.getBounds();
        setLocation(parentBounds.x + 20, parentBounds.y + 20);

        mineField = ((JMineFrame) parent).getMineField();

        jSliderMineFieldWidth.addChangeListener(new SlidersListener(jTextField1));
        jSliderMineFieldHeight.addChangeListener(new SlidersListener(jTextField2));
        jSliderNumberOfMines.addChangeListener(new SlidersListener(jTextField3));

        if (mineField.getGameType() == mineField.GAME_TYPE_NOVICE) {
            jRadioButtonDifficult1.setSelected(true);
            initializeSliders(mineField.GAME_TYPE_NOVICE);
            setUserSettingsEnabled(false);
        } else if (mineField.getGameType() == mineField.GAME_TYPE_INTERMEDIATE) {
            jRadioButtonDifficult2.setSelected(true);
            initializeSliders(mineField.GAME_TYPE_INTERMEDIATE);
            setUserSettingsEnabled(false);
        } else if (mineField.getGameType() == mineField.GAME_TYPE_EXPERT) {
            jRadioButtonDifficult3.setSelected(true);
            initializeSliders(mineField.GAME_TYPE_EXPERT);
            setUserSettingsEnabled(false);
        } else {
            jRadioButtonUser.setSelected(true);
            initializeSliders(mineField.GAME_TYPE_USER);
            setUserSettingsEnabled(true);
        }
    }

    private void initializeSliders(int gameType) {
        if (gameType == mineField.GAME_TYPE_NOVICE) {
            jSliderMineFieldWidth.setValue(mineField.noviceGame.getMineFieldWidth());
            jSliderMineFieldHeight.setValue(mineField.noviceGame.getMineFiledHeight());
            jSliderNumberOfMines.setValue(mineField.noviceGame.getNumberOfMines());
        } else if (gameType == mineField.GAME_TYPE_INTERMEDIATE) {
            jSliderMineFieldWidth.setValue(mineField.intermediateGame.getMineFieldWidth());
            jSliderMineFieldHeight.setValue(mineField.intermediateGame.getMineFiledHeight());
            jSliderNumberOfMines.setValue(mineField.intermediateGame.getNumberOfMines());
        } else if (gameType == mineField.GAME_TYPE_EXPERT) {
            jSliderMineFieldWidth.setValue(mineField.expertGame.getMineFieldWidth());
            jSliderMineFieldHeight.setValue(mineField.expertGame.getMineFiledHeight());
            jSliderNumberOfMines.setValue(mineField.expertGame.getNumberOfMines());
        } else {
            jSliderMineFieldWidth.setValue(mineField.userGame.getMineFieldWidth());
            jSliderMineFieldHeight.setValue(mineField.userGame.getMineFiledHeight());
            jSliderNumberOfMines.setValue(mineField.userGame.getNumberOfMines());
        }
    }

    private void setUserSettingsEnabled(boolean enabled) {
        jSliderMineFieldWidth.setEnabled(enabled);
        jSliderMineFieldHeight.setEnabled(enabled);
        jSliderNumberOfMines.setEnabled(enabled);
        jLabel1.setEnabled(enabled);
        jLabel2.setEnabled(enabled);
        jLabel3.setEnabled(enabled);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroupGameDifficult = new javax.swing.ButtonGroup();
        jPanelDifficult = new javax.swing.JPanel();
        jRadioButtonDifficult1 = new javax.swing.JRadioButton();
        jRadioButtonDifficult2 = new javax.swing.JRadioButton();
        jRadioButtonDifficult3 = new javax.swing.JRadioButton();
        jRadioButtonUser = new javax.swing.JRadioButton();
        jPanelUserSettings = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSliderMineFieldWidth = new javax.swing.JSlider();
        jSliderMineFieldHeight = new javax.swing.JSlider();
        jSliderNumberOfMines = new javax.swing.JSlider();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jPanelButtons = new javax.swing.JPanel();
        jButtonOk = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Preferences");
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanelDifficult.setBorder(javax.swing.BorderFactory.createTitledBorder("Game difficult"));
        jPanelDifficult.setLayout(new java.awt.GridBagLayout());

        buttonGroupGameDifficult.add(jRadioButtonDifficult1);
        jRadioButtonDifficult1.setText("Novice");
        jRadioButtonDifficult1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonDifficult1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelDifficult.add(jRadioButtonDifficult1, gridBagConstraints);

        buttonGroupGameDifficult.add(jRadioButtonDifficult2);
        jRadioButtonDifficult2.setText("Intermediate");
        jRadioButtonDifficult2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonDifficult2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelDifficult.add(jRadioButtonDifficult2, gridBagConstraints);

        buttonGroupGameDifficult.add(jRadioButtonDifficult3);
        jRadioButtonDifficult3.setText("Expert");
        jRadioButtonDifficult3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonDifficult3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelDifficult.add(jRadioButtonDifficult3, gridBagConstraints);

        buttonGroupGameDifficult.add(jRadioButtonUser);
        jRadioButtonUser.setText("User");
        jRadioButtonUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonUserActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelDifficult.add(jRadioButtonUser, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        getContentPane().add(jPanelDifficult, gridBagConstraints);

        jPanelUserSettings.setBorder(javax.swing.BorderFactory.createTitledBorder("User"));
        jPanelUserSettings.setEnabled(false);
        jPanelUserSettings.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Mine field width:");
        jLabel1.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanelUserSettings.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Mine field height:");
        jLabel2.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 2);
        jPanelUserSettings.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Number of mines:");
        jLabel3.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 2);
        jPanelUserSettings.add(jLabel3, gridBagConstraints);

        jSliderMineFieldWidth.setMaximum(64);
        jSliderMineFieldWidth.setMinimum(1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanelUserSettings.add(jSliderMineFieldWidth, gridBagConstraints);

        jSliderMineFieldHeight.setMaximum(64);
        jSliderMineFieldHeight.setMinimum(1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanelUserSettings.add(jSliderMineFieldHeight, gridBagConstraints);

        jSliderNumberOfMines.setMinimum(1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanelUserSettings.add(jSliderNumberOfMines, gridBagConstraints);

        jTextField1.setEditable(false);
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField1.setText("0");
        jTextField1.setMinimumSize(new java.awt.Dimension(20, 19));
        jTextField1.setPreferredSize(new java.awt.Dimension(40, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanelUserSettings.add(jTextField1, gridBagConstraints);

        jTextField2.setEditable(false);
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField2.setText("0");
        jTextField2.setMinimumSize(new java.awt.Dimension(20, 19));
        jTextField2.setPreferredSize(new java.awt.Dimension(40, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        jPanelUserSettings.add(jTextField2, gridBagConstraints);

        jTextField3.setEditable(false);
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField3.setText("0");
        jTextField3.setMinimumSize(new java.awt.Dimension(20, 19));
        jTextField3.setPreferredSize(new java.awt.Dimension(40, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        jPanelUserSettings.add(jTextField3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        getContentPane().add(jPanelUserSettings, gridBagConstraints);

        jPanelButtons.setLayout(new java.awt.GridBagLayout());

        jButtonOk.setText("Ok");
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanelButtons.add(jButtonOk, gridBagConstraints);

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        jPanelButtons.add(jButtonCancel, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jPanelButtons, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void jRadioButtonUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonUserActionPerformed
            initializeSliders(mineField.GAME_TYPE_USER);
            setUserSettingsEnabled(true);
	}//GEN-LAST:event_jRadioButtonUserActionPerformed

	private void jRadioButtonDifficult3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonDifficult3ActionPerformed
            initializeSliders(mineField.GAME_TYPE_EXPERT);
            setUserSettingsEnabled(false);
	}//GEN-LAST:event_jRadioButtonDifficult3ActionPerformed

	private void jRadioButtonDifficult2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonDifficult2ActionPerformed
            initializeSliders(mineField.GAME_TYPE_INTERMEDIATE);
            setUserSettingsEnabled(false);
	}//GEN-LAST:event_jRadioButtonDifficult2ActionPerformed

	private void jRadioButtonDifficult1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonDifficult1ActionPerformed
            initializeSliders(mineField.GAME_TYPE_NOVICE);
            setUserSettingsEnabled(false);
	}//GEN-LAST:event_jRadioButtonDifficult1ActionPerformed

	private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
            if (jRadioButtonDifficult1.isSelected()) {
                mineField.setGameType(mineField.GAME_TYPE_NOVICE);
            } else if (jRadioButtonDifficult2.isSelected()) {
                mineField.setGameType(mineField.GAME_TYPE_INTERMEDIATE);
            } else if (jRadioButtonDifficult3.isSelected()) {
                mineField.setGameType(mineField.GAME_TYPE_EXPERT);
            } else {
                int height = jSliderMineFieldHeight.getValue();
                int width = jSliderMineFieldWidth.getValue();
                int mines = jSliderNumberOfMines.getValue();

                mineField.userGame.setMineFieldWidth(width);
                mineField.userGame.setMineFieldHeight(height);
                mineField.userGame.setNumberOfMines(mines);

                mineField.setGameType(mineField.GAME_TYPE_USER);
            }

            setVisible(false);
            dispose();
	}//GEN-LAST:event_jButtonOkActionPerformed

	private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
            setVisible(false);
            dispose();
	}//GEN-LAST:event_jButtonCancelActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupGameDifficult;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanelButtons;
    private javax.swing.JPanel jPanelDifficult;
    private javax.swing.JPanel jPanelUserSettings;
    private javax.swing.JRadioButton jRadioButtonDifficult1;
    private javax.swing.JRadioButton jRadioButtonDifficult2;
    private javax.swing.JRadioButton jRadioButtonDifficult3;
    private javax.swing.JRadioButton jRadioButtonUser;
    private javax.swing.JSlider jSliderMineFieldHeight;
    private javax.swing.JSlider jSliderMineFieldWidth;
    private javax.swing.JSlider jSliderNumberOfMines;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
