/*
 * JDialogPreferences.java
 *
 * Created on 29 sierpieï¿½ 2005, 19:13
 */
package org.lucassus.jmine.dialogs;

import java.util.logging.Level;
import java.util.logging.Logger;
import org.lucassus.jmine.JMineFrame;
import org.lucassus.jmine.enums.GameTypeException;
import org.lucassus.jmine.field.MineField;
import java.awt.Rectangle;
import javax.swing.JSlider;
import javax.swing.JTextField;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.lucassus.jmine.enums.GameType;

/**
 *
 * @author  lucassus
 */
public class JDialogPreferences extends javax.swing.JDialog {

    private class SliderListener implements ChangeListener {

        JTextField textField;

        SliderListener(JTextField textField) {
            this.textField = textField;
        }

        @Override
        public void stateChanged(ChangeEvent evt) {
            JSlider slider = (JSlider) evt.getSource();
            textField.setText(Integer.toString(slider.getValue()));

            int fieldWidth = sliderMineFieldWidth.getValue();
            int fieldHeight = sliderMineFieldHeight.getValue();
            int maxMines = (int) Math.ceil((fieldHeight * fieldWidth) / 2);
            sliderNumberOfMines.setMaximum(maxMines);
        }
    }
    private MineField mineField;

    /**
     * Creates new form JDialogPreferences
     * @param parent
     * @param modal
     */
    public JDialogPreferences(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Rectangle parentBounds = parent.getBounds();
        setLocation(parentBounds.x + 20, parentBounds.y + 20);

        mineField = ((JMineFrame) parent).getMineField();

        initializeSliders(mineField.getGameType());
        sliderMineFieldWidth.addChangeListener(new SliderListener(textFieldMineFieldWidth));
        sliderMineFieldHeight.addChangeListener(new SliderListener(textFieldMineFieldHeight));
        sliderNumberOfMines.addChangeListener(new SliderListener(textFieldNumberOfMines));

        if (mineField.getGameType() == GameType.NOVICE) {
            radioButtonNoviceGame.setSelected(true);
            disableUserSettings();
        } else if (mineField.getGameType() == GameType.INTERMEDIATE) {
            radioButtonIntermediateGame.setSelected(true);
            disableUserSettings();
        } else if (mineField.getGameType() == GameType.EXPERT) {
            radioButtonExpertGame.setSelected(true);
            disableUserSettings();
        } else {
            radioButtonUserGame.setSelected(true);
            enableUserSettings();
        }
    }

    private void initializeSliders(GameType gameType) {
        sliderMineFieldWidth.setValue(gameType.getMineFieldWidth());
        sliderMineFieldHeight.setValue(gameType.getMineFieldHeight());
        sliderNumberOfMines.setValue(gameType.getNumberOfMines());
    }

    private void enableUserSettings() {
        setUserSettingsEnabled(true);
    }

    private void disableUserSettings() {
        setUserSettingsEnabled(false);
    }

    private void setUserSettingsEnabled(boolean enabled) {
        sliderMineFieldWidth.setEnabled(enabled);
        sliderMineFieldHeight.setEnabled(enabled);
        sliderNumberOfMines.setEnabled(enabled);
        jLabel1.setEnabled(enabled);
        jLabel2.setEnabled(enabled);
        jLabel3.setEnabled(enabled);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroupGameDifficult = new javax.swing.ButtonGroup();
        jPanelDifficult = new javax.swing.JPanel();
        radioButtonNoviceGame = new javax.swing.JRadioButton();
        radioButtonIntermediateGame = new javax.swing.JRadioButton();
        radioButtonExpertGame = new javax.swing.JRadioButton();
        radioButtonUserGame = new javax.swing.JRadioButton();
        jPanelUserSettings = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        sliderMineFieldWidth = new javax.swing.JSlider();
        sliderMineFieldHeight = new javax.swing.JSlider();
        sliderNumberOfMines = new javax.swing.JSlider();
        textFieldMineFieldWidth = new javax.swing.JTextField();
        textFieldMineFieldHeight = new javax.swing.JTextField();
        textFieldNumberOfMines = new javax.swing.JTextField();
        jPanelButtons = new javax.swing.JPanel();
        jButtonOk = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Preferences");
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanelDifficult.setBorder(javax.swing.BorderFactory.createTitledBorder("Game difficult"));
        jPanelDifficult.setLayout(new java.awt.GridBagLayout());

        buttonGroupGameDifficult.add(radioButtonNoviceGame);
        radioButtonNoviceGame.setText("Novice");
        radioButtonNoviceGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonNoviceGameActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelDifficult.add(radioButtonNoviceGame, gridBagConstraints);

        buttonGroupGameDifficult.add(radioButtonIntermediateGame);
        radioButtonIntermediateGame.setText("Intermediate");
        radioButtonIntermediateGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonIntermediateGameActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelDifficult.add(radioButtonIntermediateGame, gridBagConstraints);

        buttonGroupGameDifficult.add(radioButtonExpertGame);
        radioButtonExpertGame.setText("Expert");
        radioButtonExpertGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonExpertGameActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelDifficult.add(radioButtonExpertGame, gridBagConstraints);

        buttonGroupGameDifficult.add(radioButtonUserGame);
        radioButtonUserGame.setText("User");
        radioButtonUserGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonUserGameActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelDifficult.add(radioButtonUserGame, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        getContentPane().add(jPanelDifficult, gridBagConstraints);

        jPanelUserSettings.setBorder(javax.swing.BorderFactory.createTitledBorder("User"));
        jPanelUserSettings.setEnabled(false);
        jPanelUserSettings.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Mine field width:");
        jLabel1.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanelUserSettings.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Mine field height:");
        jLabel2.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 2);
        jPanelUserSettings.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Number of mines:");
        jLabel3.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 2);
        jPanelUserSettings.add(jLabel3, gridBagConstraints);

        sliderMineFieldWidth.setMaximum(64);
        sliderMineFieldWidth.setMinimum(1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanelUserSettings.add(sliderMineFieldWidth, gridBagConstraints);

        sliderMineFieldHeight.setMaximum(64);
        sliderMineFieldHeight.setMinimum(1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanelUserSettings.add(sliderMineFieldHeight, gridBagConstraints);

        sliderNumberOfMines.setMinimum(1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanelUserSettings.add(sliderNumberOfMines, gridBagConstraints);

        textFieldMineFieldWidth.setEditable(false);
        textFieldMineFieldWidth.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        textFieldMineFieldWidth.setText("0");
        textFieldMineFieldWidth.setMinimumSize(new java.awt.Dimension(20, 19));
        textFieldMineFieldWidth.setPreferredSize(new java.awt.Dimension(40, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanelUserSettings.add(textFieldMineFieldWidth, gridBagConstraints);

        textFieldMineFieldHeight.setEditable(false);
        textFieldMineFieldHeight.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        textFieldMineFieldHeight.setText("0");
        textFieldMineFieldHeight.setMinimumSize(new java.awt.Dimension(20, 19));
        textFieldMineFieldHeight.setPreferredSize(new java.awt.Dimension(40, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        jPanelUserSettings.add(textFieldMineFieldHeight, gridBagConstraints);

        textFieldNumberOfMines.setEditable(false);
        textFieldNumberOfMines.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        textFieldNumberOfMines.setText("0");
        textFieldNumberOfMines.setMinimumSize(new java.awt.Dimension(20, 19));
        textFieldNumberOfMines.setPreferredSize(new java.awt.Dimension(40, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        jPanelUserSettings.add(textFieldNumberOfMines, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        getContentPane().add(jPanelUserSettings, gridBagConstraints);

        jPanelButtons.setLayout(new java.awt.GridBagLayout());

        jButtonOk.setText("Ok");
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanelButtons.add(jButtonOk, gridBagConstraints);

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        jPanelButtons.add(jButtonCancel, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jPanelButtons, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void radioButtonUserGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonUserGameActionPerformed
            initializeSliders(GameType.USER);
            enableUserSettings();
	}//GEN-LAST:event_radioButtonUserGameActionPerformed

	private void radioButtonExpertGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonExpertGameActionPerformed
            initializeSliders(GameType.EXPERT);
            disableUserSettings();
	}//GEN-LAST:event_radioButtonExpertGameActionPerformed

	private void radioButtonIntermediateGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonIntermediateGameActionPerformed
            initializeSliders(GameType.INTERMEDIATE);
            disableUserSettings();
	}//GEN-LAST:event_radioButtonIntermediateGameActionPerformed

	private void radioButtonNoviceGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonNoviceGameActionPerformed
            initializeSliders(GameType.NOVICE);
            disableUserSettings();
	}//GEN-LAST:event_radioButtonNoviceGameActionPerformed

	private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
            if (radioButtonNoviceGame.isSelected()) {
                mineField.setGameType(GameType.NOVICE);
            } else if (radioButtonIntermediateGame.isSelected()) {
                mineField.setGameType(GameType.INTERMEDIATE);
            } else if (radioButtonExpertGame.isSelected()) {
                mineField.setGameType(GameType.EXPERT);
            } else {
                int height = sliderMineFieldHeight.getValue();
                int width = sliderMineFieldWidth.getValue();
                int mines = sliderNumberOfMines.getValue();

                try {
                    GameType.USER.setMineFieldWidth(width);
                    GameType.USER.setMineFieldHeight(height);
                    GameType.USER.setNumberOfMines(mines);
                } catch (GameTypeException ex) {
                    Logger.getLogger(JDialogPreferences.class.getName()).log(Level.SEVERE, null, ex);
                }

                mineField.setGameType(GameType.USER);
            }

            setVisible(false);
            dispose();
	}//GEN-LAST:event_jButtonOkActionPerformed

	private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
            setVisible(false);
            dispose();
	}//GEN-LAST:event_jButtonCancelActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupGameDifficult;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanelButtons;
    private javax.swing.JPanel jPanelDifficult;
    private javax.swing.JPanel jPanelUserSettings;
    private javax.swing.JRadioButton radioButtonExpertGame;
    private javax.swing.JRadioButton radioButtonIntermediateGame;
    private javax.swing.JRadioButton radioButtonNoviceGame;
    private javax.swing.JRadioButton radioButtonUserGame;
    private javax.swing.JSlider sliderMineFieldHeight;
    private javax.swing.JSlider sliderMineFieldWidth;
    private javax.swing.JSlider sliderNumberOfMines;
    private javax.swing.JTextField textFieldMineFieldHeight;
    private javax.swing.JTextField textFieldMineFieldWidth;
    private javax.swing.JTextField textFieldNumberOfMines;
    // End of variables declaration//GEN-END:variables
}
