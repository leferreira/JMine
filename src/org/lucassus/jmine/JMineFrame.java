/*
 * JMineFrame.java
 *
 * Created on 29 sierpieï¿½ 2005, 19:08
 */

package org.lucassus.jmine;

import org.lucassus.jmine.dialogs.JDialogAbout;
import org.lucassus.jmine.dialogs.JDialogPreferences;
import org.lucassus.jmine.field.MineField;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JTextField;
import org.lucassus.jmine.field.GameIcon;

/**
 *
 * @author  lucassus
 */
public class JMineFrame extends javax.swing.JFrame {
	
	private MineField mineField;
	
	private Locale currentLocale;
	private ResourceBundle messages;
	
	/** Creates new form JMineFrame */
	public JMineFrame() {
		currentLocale = new Locale("en", "GB");
		messages = ResourceBundle.getBundle("org/lucassus/jmine/resources/languages", currentLocale);
		initComponents();
		
		mineField = new MineField(this);
		initCheckBoxes();
	}
	
	public JPanel getMineFieldPanel() {
		return jPanelMineField;
	}
	
	public MineField getMineField() {
		return mineField;
	}
	
	public JButton getNewGameButton() {
		return jButtonNewGame;
	}
	
	private void initCheckBoxes() {
		if (mineField == null) return;
		if (mineField.getGameType() == mineField.GAME_TYPE_NOVICE) {
			jCheckBoxMenuItemGameNovice.setSelected(true);
		} else if (mineField.getGameType() == mineField.GAME_TYPE_INTERMEDIATE) {
			jCheckBoxMenuItemGameIntermediate.setSelected(true);
		} else if (mineField.getGameType() == mineField.GAME_TYPE_EXPERT) {
			jCheckBoxMenuItemGameExpert.setSelected(true);
		} else {
			jCheckBoxMenuItemGameUser.setSelected(true);
		}
	}
	
	public JTextField getFlagsField() {
		return jTextFieldFlags;
	}
	
	public JTextField getCounterField() {
		return jTextFieldCounter;
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroupGameType = new javax.swing.ButtonGroup();
        buttonGroupLanguage = new javax.swing.ButtonGroup();
        jPanelTop = new javax.swing.JPanel();
        jButtonNewGame = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTextFieldCounter = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jTextFieldFlags = new javax.swing.JTextField();
        jPanelMineField = new javax.swing.JPanel();
        jMenuBar = new javax.swing.JMenuBar();
        jMenuGame = new javax.swing.JMenu();
        jMenuItemNewGame = new javax.swing.JMenuItem();
        jMenuItemHint = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        jCheckBoxMenuItemGameNovice = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItemGameIntermediate = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItemGameExpert = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItemGameUser = new javax.swing.JCheckBoxMenuItem();
        jSeparator3 = new javax.swing.JSeparator();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuOptions = new javax.swing.JMenu();
        jMenuItemPreferences = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        jCheckBoxMenuItemAlwaysOnTop = new javax.swing.JCheckBoxMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuItemAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JMine");
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanelTop.setLayout(new java.awt.GridBagLayout());

        jButtonNewGame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/lucassus/jmine/resources/face.gif"))); // NOI18N
        jButtonNewGame.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonNewGame.setPreferredSize(new java.awt.Dimension(28, 28));
        jButtonNewGame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButtonNewGameMousePressed(evt);
            }
        });
        jButtonNewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewGameActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanelTop.add(jButtonNewGame, gridBagConstraints);

        jTextFieldCounter.setEditable(false);
        jTextFieldCounter.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldCounter.setPreferredSize(new java.awt.Dimension(50, 19));
        jPanel1.add(jTextFieldCounter);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanelTop.add(jPanel1, gridBagConstraints);

        jTextFieldFlags.setEditable(false);
        jTextFieldFlags.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldFlags.setText("0");
        jTextFieldFlags.setPreferredSize(new java.awt.Dimension(50, 19));
        jPanel2.add(jTextFieldFlags);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanelTop.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jPanelTop, gridBagConstraints);

        jPanelMineField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanelMineField.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 0);
        getContentPane().add(jPanelMineField, gridBagConstraints);

        jMenuGame.setText(messages.getString("Game")); // NOI18N

        jMenuItemNewGame.setText(messages.getString("New_Game")); // NOI18N
        jMenuItemNewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNewGameActionPerformed(evt);
            }
        });
        jMenuGame.add(jMenuItemNewGame);

        jMenuItemHint.setText(messages.getString("Hint")); // NOI18N
        jMenuItemHint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemHintActionPerformed(evt);
            }
        });
        jMenuGame.add(jMenuItemHint);
        jMenuGame.add(jSeparator1);

        buttonGroupGameType.add(jCheckBoxMenuItemGameNovice);
        jCheckBoxMenuItemGameNovice.setText(messages.getString("Novice")); // NOI18N
        jCheckBoxMenuItemGameNovice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemGameNoviceActionPerformed(evt);
            }
        });
        jMenuGame.add(jCheckBoxMenuItemGameNovice);

        buttonGroupGameType.add(jCheckBoxMenuItemGameIntermediate);
        jCheckBoxMenuItemGameIntermediate.setText(messages.getString("Intermediate")); // NOI18N
        jCheckBoxMenuItemGameIntermediate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemGameIntermediateActionPerformed(evt);
            }
        });
        jMenuGame.add(jCheckBoxMenuItemGameIntermediate);

        buttonGroupGameType.add(jCheckBoxMenuItemGameExpert);
        jCheckBoxMenuItemGameExpert.setText(messages.getString("Expert")); // NOI18N
        jCheckBoxMenuItemGameExpert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemGameExpertActionPerformed(evt);
            }
        });
        jMenuGame.add(jCheckBoxMenuItemGameExpert);

        buttonGroupGameType.add(jCheckBoxMenuItemGameUser);
        jCheckBoxMenuItemGameUser.setText(messages.getString("User_game")); // NOI18N
        jCheckBoxMenuItemGameUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemGameUserActionPerformed(evt);
            }
        });
        jMenuGame.add(jCheckBoxMenuItemGameUser);
        jMenuGame.add(jSeparator3);

        jMenuItemExit.setText(messages.getString("Exit")); // NOI18N
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenuGame.add(jMenuItemExit);

        jMenuBar.add(jMenuGame);

        jMenuOptions.setText(messages.getString("Options")); // NOI18N

        jMenuItemPreferences.setText(messages.getString("Preferences")); // NOI18N
        jMenuItemPreferences.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPreferencesActionPerformed(evt);
            }
        });
        jMenuOptions.add(jMenuItemPreferences);
        jMenuOptions.add(jSeparator2);

        jCheckBoxMenuItemAlwaysOnTop.setText(messages.getString("Always_on_top")); // NOI18N
        jCheckBoxMenuItemAlwaysOnTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemAlwaysOnTopActionPerformed(evt);
            }
        });
        jMenuOptions.add(jCheckBoxMenuItemAlwaysOnTop);

        jMenuBar.add(jMenuOptions);

        jMenuHelp.setText(messages.getString("Help")); // NOI18N

        jMenuItemAbout.setText(messages.getString("About")); // NOI18N
        jMenuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAboutActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuItemAbout);

        jMenuBar.add(jMenuHelp);

        setJMenuBar(jMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents
			
	private void jMenuItemHintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemHintActionPerformed
		mineField.hint();
	}//GEN-LAST:event_jMenuItemHintActionPerformed
	
	private void jCheckBoxMenuItemGameUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemGameUserActionPerformed
		mineField.newGame(mineField.GAME_TYPE_USER);
	}//GEN-LAST:event_jCheckBoxMenuItemGameUserActionPerformed
	
	private void jCheckBoxMenuItemGameExpertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemGameExpertActionPerformed
		mineField.newGame(mineField.GAME_TYPE_EXPERT);
	}//GEN-LAST:event_jCheckBoxMenuItemGameExpertActionPerformed
	
	private void jCheckBoxMenuItemGameIntermediateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemGameIntermediateActionPerformed
		mineField.newGame(mineField.GAME_TYPE_INTERMEDIATE);
	}//GEN-LAST:event_jCheckBoxMenuItemGameIntermediateActionPerformed
	
	private void jCheckBoxMenuItemGameNoviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemGameNoviceActionPerformed
		mineField.newGame(mineField.GAME_TYPE_NOVICE);
	}//GEN-LAST:event_jCheckBoxMenuItemGameNoviceActionPerformed
	
	private void jButtonNewGameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonNewGameMousePressed
		if (evt.getButton() == evt.MOUSE_PRESSED) {
			jButtonNewGame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JMine/resources/face.gif")));
		}
	}//GEN-LAST:event_jButtonNewGameMousePressed
	
	private void jButtonNewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewGameActionPerformed
		mineField.newGame();
	}//GEN-LAST:event_jButtonNewGameActionPerformed
	
	private void jMenuItemNewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNewGameActionPerformed
		mineField.newGame();
	}//GEN-LAST:event_jMenuItemNewGameActionPerformed
	
	private void jMenuItemPreferencesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPreferencesActionPerformed
		new JDialogPreferences(this,  true).setVisible(true);
		initCheckBoxes();
		mineField.newGame();
	}//GEN-LAST:event_jMenuItemPreferencesActionPerformed
	
	private void jCheckBoxMenuItemAlwaysOnTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemAlwaysOnTopActionPerformed
		if (jCheckBoxMenuItemAlwaysOnTop.isSelected()) {
			this.setAlwaysOnTop(true);
		} else {
			this.setAlwaysOnTop(false);
		}
	}//GEN-LAST:event_jCheckBoxMenuItemAlwaysOnTopActionPerformed
		
	private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
		System.exit(0);
	}//GEN-LAST:event_jMenuItemExitActionPerformed
	
	private void jMenuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAboutActionPerformed
		new JDialogAbout(this, true).setVisible(true);
	}//GEN-LAST:event_jMenuItemAboutActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupGameType;
    private javax.swing.ButtonGroup buttonGroupLanguage;
    private javax.swing.JButton jButtonNewGame;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemAlwaysOnTop;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemGameExpert;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemGameIntermediate;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemGameNovice;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemGameUser;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuGame;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItemAbout;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemHint;
    private javax.swing.JMenuItem jMenuItemNewGame;
    private javax.swing.JMenuItem jMenuItemPreferences;
    private javax.swing.JMenu jMenuOptions;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelMineField;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField jTextFieldCounter;
    private javax.swing.JTextField jTextFieldFlags;
    // End of variables declaration//GEN-END:variables
	
}
